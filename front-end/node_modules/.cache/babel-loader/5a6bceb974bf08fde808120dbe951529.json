{"ast":null,"code":"var _jsxFileName = \"/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  // console.log(props);\n  const [state, dispatch] = useContext(AuthContext);\n  const router = useHistory();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = form;\n\n  const handleClose = () => {\n    dispatch({\n      type: \"MODAL_LOGIN_CLOSE\"\n    });\n    state.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const handleOpenRegister = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_REGISTER_OPEN\"\n    });\n  };\n\n  const onChange = e => {\n    const updateForm = { ...form\n    };\n    updateForm[e.target.name] = e.target.value;\n    setForm(updateForm);\n  };\n\n  let response = null;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    handleClose();\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify({\n        email,\n        password\n      });\n      response = await API.post(\"/login\", body, config);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: response.data.data.user\n      });\n      setForm({\n        password: \"\"\n      });\n      setAuthToken(response.data.data.user.token);\n      router.push(\"/product\"); //   console.log(response.data);\n    } catch (err) {\n      console.log(\"err\", err.response.status.status); // if (err.response.status === 400) {\n      // \talert(\"sas\");\n      // } else {\n      // }\n    }\n  }; // console.log(\"login\", response);\n\n\n  return /*#__PURE__*/_jsxDEV(Modal // show={state.modalLogin}{modalshow}\n  , {\n    show: props.show ? props.show : state.modalLogin // onHide={handleClose}\n    ,\n    onHide: props.onHide ? props.onHide : handleClose,\n    size: \"sm\",\n    centered: true,\n    className: state.error ? \"error avenir \" : \"avenir\",\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-yellow\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: form.email,\n              onChange: e => onChange(e),\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control input-bg\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: form.password,\n              onChange: e => onChange(e),\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control input-bg\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"brown\",\n            className: \"btn btn-block btn-round\",\n            disabled: !form.email || !form.password ? true : false,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-muted delimiter mt-2\",\n          children: [\"Don't have an account ? klick\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: handleOpenRegister,\n            className: \"font-weight-bold text-muted\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"hIvKa4Io3E4NED266ZQG33mxR0c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Login.js"],"names":["useContext","useState","Link","useHistory","Redirect","API","setAuthToken","AuthContext","Button","Form","Modal","Alert","Login","props","state","dispatch","router","form","setForm","email","password","handleClose","type","redirect","handleOpenRegister","onChange","e","updateForm","target","name","value","response","handleSubmit","preventDefault","config","headers","body","JSON","stringify","post","payload","data","user","token","push","err","console","log","status","show","modalLogin","onHide","error"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,eAAlC;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,iBAA3C;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACO,WAAD,CAApC;AACA,QAAMS,MAAM,GAAGb,UAAU,EAAzB;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAChCkB,IAAAA,KAAK,EAAE,EADyB;AAEhCC,IAAAA,QAAQ,EAAE;AAFsB,GAAD,CAAhC;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACzBN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAE;AADE,KAAD,CAAR;AAGAR,IAAAA,KAAK,CAACS,QAAN,gBAAiB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAAuC,qCAAvC;AACA,GALD;;AAMA,QAAMC,kBAAkB,GAAG,MAAM;AAChCH,IAAAA,WAAW;AACXN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAE;AADE,KAAD,CAAR;AAGA,GALD;;AAOA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACvB,UAAMC,UAAU,GAAG,EAAE,GAAGV;AAAL,KAAnB;AACAU,IAAAA,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAV,GAA4BH,CAAC,CAACE,MAAF,CAASE,KAArC;AACAZ,IAAAA,OAAO,CAACS,UAAD,CAAP;AACA,GAJD;;AAMA,MAAII,QAAQ,GAAG,IAAf;;AACA,QAAMC,YAAY,GAAG,MAAON,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACO,cAAF;AACAZ,IAAAA,WAAW;;AACX,QAAI;AACH,YAAMa,MAAM,GAAG;AACdC,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR;AADK,OAAf;AAMA,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC3BnB,QAAAA,KAD2B;AAE3BC,QAAAA;AAF2B,OAAf,CAAb;AAKAW,MAAAA,QAAQ,GAAG,MAAM1B,GAAG,CAACkC,IAAJ,CAAS,QAAT,EAAmBH,IAAnB,EAAyBF,MAAzB,CAAjB;AAEAnB,MAAAA,QAAQ,CAAC;AACRO,QAAAA,IAAI,EAAE,eADE;AAERkB,QAAAA,OAAO,EAAET,QAAQ,CAACU,IAAT,CAAcA,IAAd,CAAmBC;AAFpB,OAAD,CAAR;AAIAxB,MAAAA,OAAO,CAAC;AACPE,QAAAA,QAAQ,EAAE;AADH,OAAD,CAAP;AAGAd,MAAAA,YAAY,CAACyB,QAAQ,CAACU,IAAT,CAAcA,IAAd,CAAmBC,IAAnB,CAAwBC,KAAzB,CAAZ;AACA3B,MAAAA,MAAM,CAAC4B,IAAP,CAAY,UAAZ,EAtBG,CAwBH;AACA,KAzBD,CAyBE,OAAOC,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAG,CAACd,QAAJ,CAAaiB,MAAb,CAAoBA,MAAvC,EADa,CAEb;AACA;AACA;AACA;AACA;AACD,GAnCD,CA9BqB,CAkErB;;;AACA,sBACC,QAAC,KAAD,CACC;AADD;AAEC,IAAA,IAAI,EAAEnC,KAAK,CAACoC,IAAN,GAAapC,KAAK,CAACoC,IAAnB,GAA0BnC,KAAK,CAACoC,UAFvC,CAGC;AAHD;AAIC,IAAA,MAAM,EAAErC,KAAK,CAACsC,MAAN,GAAetC,KAAK,CAACsC,MAArB,GAA8B9B,WAJvC;AAKC,IAAA,IAAI,EAAC,IALN;AAMC,IAAA,QAAQ,MANT;AAOC,IAAA,SAAS,EAAEP,KAAK,CAACsC,KAAN,GAAc,eAAd,GAAgC,QAP5C;AAAA,2BASC,QAAC,KAAD,CAAO,IAAP;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACC;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eASC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAG1B,CAAD,IAAOM,YAAY,CAACN,CAAD,CAAnC;AAAA,kCACC,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,gBAAtB;AAAA,mCACC,QAAC,IAAD,CAAM,OAAN;AACC,cAAA,KAAK,EAAET,IAAI,CAACE,KADb;AAEC,cAAA,QAAQ,EAAGO,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAF1B;AAGC,cAAA,IAAI,EAAC,OAHN;AAIC,cAAA,IAAI,EAAC,OAJN;AAKC,cAAA,SAAS,EAAC,uBALX;AAMC,cAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAYC,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,mBAAtB;AAAA,mCACC,QAAC,IAAD,CAAM,OAAN;AACC,cAAA,KAAK,EAAET,IAAI,CAACG,QADb;AAEC,cAAA,QAAQ,EAAGM,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAF1B;AAGC,cAAA,IAAI,EAAC,UAHN;AAIC,cAAA,IAAI,EAAC,UAJN;AAKC,cAAA,SAAS,EAAC,uBALX;AAMC,cAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAZD,eAsBC,QAAC,MAAD;AACC,YAAA,IAAI,EAAC,QADN;AAEC,YAAA,OAAO,EAAC,OAFT;AAGC,YAAA,SAAS,EAAC,yBAHX;AAIC,YAAA,QAAQ,EAAE,CAACT,IAAI,CAACE,KAAN,IAAe,CAACF,IAAI,CAACG,QAArB,GAAgC,IAAhC,GAAuC,KAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAgCC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BN,KAAK,CAACsC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAhCD,eAkCC;AAAK,UAAA,SAAS,EAAC,uCAAf;AAAA,mEAEC,QAAC,IAAD;AACC,YAAA,EAAE,EAAC,GADJ;AAEC,YAAA,OAAO,EAAE5B,kBAFV;AAGC,YAAA,SAAS,EAAC,6BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCD;AAAA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,UADD;AAoEA;;GAvIQZ,K;UAGOT,U;;;KAHPS,K;AAwIT,eAAeA,KAAf","sourcesContent":["import { useContext, useState } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\n\nimport { AuthContext } from \"../contexts/authContext\";\n\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\n\nfunction Login(props) {\n\t// console.log(props);\n\tconst [state, dispatch] = useContext(AuthContext);\n\tconst router = useHistory();\n\tconst [form, setForm] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\tconst { email, password } = form;\n\n\tconst handleClose = () => {\n\t\tdispatch({\n\t\t\ttype: \"MODAL_LOGIN_CLOSE\",\n\t\t});\n\t\tstate.redirect ? <Redirect to=\"/\" /> : <></>;\n\t};\n\tconst handleOpenRegister = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_OPEN\",\n\t\t});\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst updateForm = { ...form };\n\t\tupdateForm[e.target.name] = e.target.value;\n\t\tsetForm(updateForm);\n\t};\n\n\tlet response = null;\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\thandleClose();\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst body = JSON.stringify({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t});\n\n\t\t\tresponse = await API.post(\"/login\", body, config);\n\n\t\t\tdispatch({\n\t\t\t\ttype: \"LOGIN_SUCCESS\",\n\t\t\t\tpayload: response.data.data.user,\n\t\t\t});\n\t\t\tsetForm({\n\t\t\t\tpassword: \"\",\n\t\t\t});\n\t\t\tsetAuthToken(response.data.data.user.token);\n\t\t\trouter.push(\"/product\");\n\n\t\t\t//   console.log(response.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(\"err\", err.response.status.status);\n\t\t\t// if (err.response.status === 400) {\n\t\t\t// \talert(\"sas\");\n\t\t\t// } else {\n\t\t\t// }\n\t\t}\n\t};\n\t// console.log(\"login\", response);\n\treturn (\n\t\t<Modal\n\t\t\t// show={state.modalLogin}{modalshow}\n\t\t\tshow={props.show ? props.show : state.modalLogin}\n\t\t\t// onHide={handleClose}\n\t\t\tonHide={props.onHide ? props.onHide : handleClose}\n\t\t\tsize=\"sm\"\n\t\t\tcentered\n\t\t\tclassName={state.error ? \"error avenir \" : \"avenir\"}\n\t\t>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"form-title mb-3\">\n\t\t\t\t\t<h4 className=\"text-yellow\">Login</h4>\n\t\t\t\t</div>\n\t\t\t\t{/* {addrestaurant.error?.response?.data?.message && ( */}\n\t\t\t\t{/* <Alert variant=\"danger\"> */}\n\t\t\t\t{/* {addrestaurant.error?.response?.data?.message} */}\n\t\t\t\t{/* </Alert> */}\n\t\t\t\t{/* // )} */}\n\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t<Form onSubmit={(e) => handleSubmit(e)}>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tvalue={form.email}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tvalue={form.password}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"brown\"\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n\t\t\t\t\t\t\tdisabled={!form.email || !form.password ? true : false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<p className=\"text-danger\">{state.error}</p>\n\t\t\t\t\t{/* <pre>{JSON.stringify(form, 2, null)}</pre> */}\n\t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2\">\n\t\t\t\t\t\tDon't have an account ? klick\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\t\tonClick={handleOpenRegister}\n\t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}